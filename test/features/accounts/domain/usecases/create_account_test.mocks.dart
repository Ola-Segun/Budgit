// Mocks generated by Mockito 5.4.4 from annotations
// in budget_tracker/test/features/accounts/domain/usecases/create_account_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:budget_tracker/core/error/result.dart' as _i4;
import 'package:budget_tracker/features/accounts/domain/entities/account.dart'
    as _i5;
import 'package:budget_tracker/features/accounts/domain/repositories/account_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i2.AccountRepository {
  MockAccountRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.Account>>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Account>>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Account>>>);

  @override
  _i3.Future<_i4.Result<_i5.Account?>> getById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Account?>>.value(
            _i6.dummyValue<_i4.Result<_i5.Account?>>(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Account?>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Account>>> getByType(_i5.AccountType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByType,
          [type],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Account>>>(
          this,
          Invocation.method(
            #getByType,
            [type],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Account>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Account>>> getActive() => (super.noSuchMethod(
        Invocation.method(
          #getActive,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Account>>>(
          this,
          Invocation.method(
            #getActive,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Account>>>);

  @override
  _i3.Future<_i4.Result<_i5.Account>> add(_i5.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [account],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Account>>.value(
            _i6.dummyValue<_i4.Result<_i5.Account>>(
          this,
          Invocation.method(
            #add,
            [account],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Account>>);

  @override
  _i3.Future<_i4.Result<_i5.Account>> update(_i5.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [account],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Account>>.value(
            _i6.dummyValue<_i4.Result<_i5.Account>>(
          this,
          Invocation.method(
            #update,
            [account],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Account>>);

  @override
  _i3.Future<_i4.Result<void>> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue:
            _i3.Future<_i4.Result<void>>.value(_i6.dummyValue<_i4.Result<void>>(
          this,
          Invocation.method(
            #delete,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<double>> getTotalBalance() => (super.noSuchMethod(
        Invocation.method(
          #getTotalBalance,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<double>>.value(
            _i6.dummyValue<_i4.Result<double>>(
          this,
          Invocation.method(
            #getTotalBalance,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<double>> getNetWorth() => (super.noSuchMethod(
        Invocation.method(
          #getNetWorth,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<double>>.value(
            _i6.dummyValue<_i4.Result<double>>(
          this,
          Invocation.method(
            #getNetWorth,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<int>> getCount() => (super.noSuchMethod(
        Invocation.method(
          #getCount,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Result<int>>.value(_i6.dummyValue<_i4.Result<int>>(
          this,
          Invocation.method(
            #getCount,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Account>>> search(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Account>>>(
          this,
          Invocation.method(
            #search,
            [query],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Account>>>);
}
