// Mocks generated by Mockito 5.4.4 from annotations
// in budget_tracker/test/features/bills/advanced_account_selection_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:budget_tracker/core/error/result.dart' as _i4;
import 'package:budget_tracker/features/accounts/domain/entities/account.dart'
    as _i8;
import 'package:budget_tracker/features/accounts/domain/repositories/account_repository.dart'
    as _i7;
import 'package:budget_tracker/features/bills/domain/entities/bill.dart' as _i5;
import 'package:budget_tracker/features/bills/domain/repositories/bill_repository.dart'
    as _i2;
import 'package:budget_tracker/features/transactions/domain/entities/transaction.dart'
    as _i10;
import 'package:budget_tracker/features/transactions/domain/entities/transaction_filter.dart'
    as _i11;
import 'package:budget_tracker/features/transactions/domain/repositories/transaction_repository.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBillRepository extends _i1.Mock implements _i2.BillRepository {
  MockBillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.Bill>>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Bill>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Bill>>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Bill>>>);

  @override
  _i3.Future<_i4.Result<_i5.Bill?>> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Bill?>>.value(
            _i6.dummyValue<_i4.Result<_i5.Bill?>>(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Bill?>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Bill>>> getDueWithin(int? days) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDueWithin,
          [days],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Bill>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Bill>>>(
          this,
          Invocation.method(
            #getDueWithin,
            [days],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Bill>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Bill>>> getOverdue() => (super.noSuchMethod(
        Invocation.method(
          #getOverdue,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Bill>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Bill>>>(
          this,
          Invocation.method(
            #getOverdue,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Bill>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Bill>>> getPaidThisMonth() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaidThisMonth,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Bill>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Bill>>>(
          this,
          Invocation.method(
            #getPaidThisMonth,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Bill>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Bill>>> getUnpaidThisMonth() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnpaidThisMonth,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.Bill>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.Bill>>>(
          this,
          Invocation.method(
            #getUnpaidThisMonth,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.Bill>>>);

  @override
  _i3.Future<_i4.Result<_i5.Bill>> add(_i5.Bill? bill) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [bill],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Bill>>.value(
            _i6.dummyValue<_i4.Result<_i5.Bill>>(
          this,
          Invocation.method(
            #add,
            [bill],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Bill>>);

  @override
  _i3.Future<_i4.Result<_i5.Bill>> update(_i5.Bill? bill) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [bill],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Bill>>.value(
            _i6.dummyValue<_i4.Result<_i5.Bill>>(
          this,
          Invocation.method(
            #update,
            [bill],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Bill>>);

  @override
  _i3.Future<_i4.Result<void>> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue:
            _i3.Future<_i4.Result<void>>.value(_i6.dummyValue<_i4.Result<void>>(
          this,
          Invocation.method(
            #delete,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i5.Bill>> markAsPaid(
    String? billId,
    _i5.BillPayment? payment, {
    String? accountId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsPaid,
          [
            billId,
            payment,
          ],
          {#accountId: accountId},
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Bill>>.value(
            _i6.dummyValue<_i4.Result<_i5.Bill>>(
          this,
          Invocation.method(
            #markAsPaid,
            [
              billId,
              payment,
            ],
            {#accountId: accountId},
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Bill>>);

  @override
  _i3.Future<_i4.Result<_i5.Bill>> markAsUnpaid(String? billId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsUnpaid,
          [billId],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Bill>>.value(
            _i6.dummyValue<_i4.Result<_i5.Bill>>(
          this,
          Invocation.method(
            #markAsUnpaid,
            [billId],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Bill>>);

  @override
  _i3.Future<_i4.Result<_i5.BillStatus>> getBillStatus(String? billId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillStatus,
          [billId],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.BillStatus>>.value(
            _i6.dummyValue<_i4.Result<_i5.BillStatus>>(
          this,
          Invocation.method(
            #getBillStatus,
            [billId],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.BillStatus>>);

  @override
  _i3.Future<_i4.Result<List<_i5.BillStatus>>> getAllBillStatuses() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllBillStatuses,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i5.BillStatus>>>.value(
            _i6.dummyValue<_i4.Result<List<_i5.BillStatus>>>(
          this,
          Invocation.method(
            #getAllBillStatuses,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i5.BillStatus>>>);

  @override
  _i3.Future<_i4.Result<_i5.BillsSummary>> getBillsSummary() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillsSummary,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.BillsSummary>>.value(
            _i6.dummyValue<_i4.Result<_i5.BillsSummary>>(
          this,
          Invocation.method(
            #getBillsSummary,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.BillsSummary>>);

  @override
  _i3.Future<_i4.Result<_i5.Bill>> updateNextDueDate(String? billId) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNextDueDate,
          [billId],
        ),
        returnValue: _i3.Future<_i4.Result<_i5.Bill>>.value(
            _i6.dummyValue<_i4.Result<_i5.Bill>>(
          this,
          Invocation.method(
            #updateNextDueDate,
            [billId],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.Bill>>);

  @override
  _i3.Future<_i4.Result<void>> reconcileBillPayments(String? billId) =>
      (super.noSuchMethod(
        Invocation.method(
          #reconcileBillPayments,
          [billId],
        ),
        returnValue:
            _i3.Future<_i4.Result<void>>.value(_i6.dummyValue<_i4.Result<void>>(
          this,
          Invocation.method(
            #reconcileBillPayments,
            [billId],
          ),
        )),
      ) as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<bool>> nameExists(
    String? name, {
    String? excludeId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
          {#excludeId: excludeId},
        ),
        returnValue:
            _i3.Future<_i4.Result<bool>>.value(_i6.dummyValue<_i4.Result<bool>>(
          this,
          Invocation.method(
            #nameExists,
            [name],
            {#excludeId: excludeId},
          ),
        )),
      ) as _i3.Future<_i4.Result<bool>>);
}

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i7.AccountRepository {
  MockAccountRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i8.Account>>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i8.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i8.Account>>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i8.Account>>>);

  @override
  _i3.Future<_i4.Result<_i8.Account?>> getById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Result<_i8.Account?>>.value(
            _i6.dummyValue<_i4.Result<_i8.Account?>>(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i8.Account?>>);

  @override
  _i3.Future<_i4.Result<List<_i8.Account>>> getByType(_i8.AccountType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByType,
          [type],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i8.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i8.Account>>>(
          this,
          Invocation.method(
            #getByType,
            [type],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i8.Account>>>);

  @override
  _i3.Future<_i4.Result<List<_i8.Account>>> getActive() => (super.noSuchMethod(
        Invocation.method(
          #getActive,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i8.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i8.Account>>>(
          this,
          Invocation.method(
            #getActive,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i8.Account>>>);

  @override
  _i3.Future<_i4.Result<_i8.Account>> add(_i8.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [account],
        ),
        returnValue: _i3.Future<_i4.Result<_i8.Account>>.value(
            _i6.dummyValue<_i4.Result<_i8.Account>>(
          this,
          Invocation.method(
            #add,
            [account],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i8.Account>>);

  @override
  _i3.Future<_i4.Result<_i8.Account>> update(_i8.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [account],
        ),
        returnValue: _i3.Future<_i4.Result<_i8.Account>>.value(
            _i6.dummyValue<_i4.Result<_i8.Account>>(
          this,
          Invocation.method(
            #update,
            [account],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i8.Account>>);

  @override
  _i3.Future<_i4.Result<void>> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue:
            _i3.Future<_i4.Result<void>>.value(_i6.dummyValue<_i4.Result<void>>(
          this,
          Invocation.method(
            #delete,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<double>> getTotalBalance() => (super.noSuchMethod(
        Invocation.method(
          #getTotalBalance,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<double>>.value(
            _i6.dummyValue<_i4.Result<double>>(
          this,
          Invocation.method(
            #getTotalBalance,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<double>> getNetWorth() => (super.noSuchMethod(
        Invocation.method(
          #getNetWorth,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<double>>.value(
            _i6.dummyValue<_i4.Result<double>>(
          this,
          Invocation.method(
            #getNetWorth,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<int>> getCount() => (super.noSuchMethod(
        Invocation.method(
          #getCount,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Result<int>>.value(_i6.dummyValue<_i4.Result<int>>(
          this,
          Invocation.method(
            #getCount,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<List<_i8.Account>>> search(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i8.Account>>>.value(
            _i6.dummyValue<_i4.Result<List<_i8.Account>>>(
          this,
          Invocation.method(
            #search,
            [query],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i8.Account>>>);
}

/// A class which mocks [TransactionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionRepository extends _i1.Mock
    implements _i9.TransactionRepository {
  MockTransactionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<_i10.Transaction?>> getById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Result<_i10.Transaction?>>.value(
            _i6.dummyValue<_i4.Result<_i10.Transaction?>>(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i10.Transaction?>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getByDateRange(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByDateRange,
          [
            start,
            end,
          ],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getByDateRange,
            [
              start,
              end,
            ],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getByCategory(
          String? categoryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByCategory,
          [categoryId],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getByCategory,
            [categoryId],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getByType(
          _i10.TransactionType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByType,
          [type],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getByType,
            [type],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<_i10.Transaction>> add(_i10.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [transaction],
        ),
        returnValue: _i3.Future<_i4.Result<_i10.Transaction>>.value(
            _i6.dummyValue<_i4.Result<_i10.Transaction>>(
          this,
          Invocation.method(
            #add,
            [transaction],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i10.Transaction>>);

  @override
  _i3.Future<_i4.Result<_i10.Transaction>> update(
          _i10.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [transaction],
        ),
        returnValue: _i3.Future<_i4.Result<_i10.Transaction>>.value(
            _i6.dummyValue<_i4.Result<_i10.Transaction>>(
          this,
          Invocation.method(
            #update,
            [transaction],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i10.Transaction>>);

  @override
  _i3.Future<_i4.Result<void>> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue:
            _i3.Future<_i4.Result<void>>.value(_i6.dummyValue<_i4.Result<void>>(
          this,
          Invocation.method(
            #delete,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<double>> getTotalAmount(
    DateTime? start,
    DateTime? end, {
    _i10.TransactionType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalAmount,
          [
            start,
            end,
          ],
          {#type: type},
        ),
        returnValue: _i3.Future<_i4.Result<double>>.value(
            _i6.dummyValue<_i4.Result<double>>(
          this,
          Invocation.method(
            #getTotalAmount,
            [
              start,
              end,
            ],
            {#type: type},
          ),
        )),
      ) as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> search(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #search,
            [query],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<int>> getCount() => (super.noSuchMethod(
        Invocation.method(
          #getCount,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Result<int>>.value(_i6.dummyValue<_i4.Result<int>>(
          this,
          Invocation.method(
            #getCount,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getTransactionsPaginated({
    int? limit = 20,
    int? offset = 0,
    _i11.TransactionFilter? filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionsPaginated,
          [],
          {
            #limit: limit,
            #offset: offset,
            #filter: filter,
          },
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getTransactionsPaginated,
            [],
            {
              #limit: limit,
              #offset: offset,
              #filter: filter,
            },
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>>
      getTransactionsPaginatedByDateRange(
    DateTime? start,
    DateTime? end, {
    int? limit = 20,
    int? offset = 0,
    _i11.TransactionFilter? filter,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getTransactionsPaginatedByDateRange,
              [
                start,
                end,
              ],
              {
                #limit: limit,
                #offset: offset,
                #filter: filter,
              },
            ),
            returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
                _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
              this,
              Invocation.method(
                #getTransactionsPaginatedByDateRange,
                [
                  start,
                  end,
                ],
                {
                  #limit: limit,
                  #offset: offset,
                  #filter: filter,
                },
              ),
            )),
          ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getPaginated({
    int? limit = 20,
    int? offset = 0,
    _i11.TransactionFilter? filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaginated,
          [],
          {
            #limit: limit,
            #offset: offset,
            #filter: filter,
          },
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getPaginated,
            [],
            {
              #limit: limit,
              #offset: offset,
              #filter: filter,
            },
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<int>> getFilteredCount(
          _i11.TransactionFilter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredCount,
          [filter],
        ),
        returnValue:
            _i3.Future<_i4.Result<int>>.value(_i6.dummyValue<_i4.Result<int>>(
          this,
          Invocation.method(
            #getFilteredCount,
            [filter],
          ),
        )),
      ) as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<List<_i10.Transaction>>> getByAccountId(
          String? accountId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getByAccountId,
          [accountId],
        ),
        returnValue: _i3.Future<_i4.Result<List<_i10.Transaction>>>.value(
            _i6.dummyValue<_i4.Result<List<_i10.Transaction>>>(
          this,
          Invocation.method(
            #getByAccountId,
            [accountId],
          ),
        )),
      ) as _i3.Future<_i4.Result<List<_i10.Transaction>>>);

  @override
  _i3.Future<_i4.Result<Map<String, double>>> getBalancesByAccount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBalancesByAccount,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<Map<String, double>>>.value(
            _i6.dummyValue<_i4.Result<Map<String, double>>>(
          this,
          Invocation.method(
            #getBalancesByAccount,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Result<Map<String, double>>>);

  @override
  _i3.Future<_i4.Result<double>> getCalculatedBalance(String? accountId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCalculatedBalance,
          [accountId],
        ),
        returnValue: _i3.Future<_i4.Result<double>>.value(
            _i6.dummyValue<_i4.Result<double>>(
          this,
          Invocation.method(
            #getCalculatedBalance,
            [accountId],
          ),
        )),
      ) as _i3.Future<_i4.Result<double>>);
}
